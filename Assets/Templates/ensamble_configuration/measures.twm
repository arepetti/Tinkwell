// Configuration generated from a template at {{ "now" | date: "%Y-%m-%d %H:%M" }}

// These are two constants. They cannot be changed at run-time unless
// you added "use_constants: false" to Reducer's properties in the Ensamble configuration.
measure voltage {
    type: "ElectricPotential"
    unit: "Volt"
    expression: "5"
    minimum: 1
    maximum: 50
}

measure current {
    type: "ElectricCurrent"
    unit: "Ampere"
    expression: "2"
    minimum: 0
    maximum: 10
}

// This is a derived measure, it's recalculated each time one of its dependencies changed.
measure power {
    type: "Power"
    unit: "Watt"
    expression: "voltage * current"
    minimum: 0
    maximum: 500

    // These are signals associated with this measure. Note that in the expression you
    // can refer to the parent measure by name or generically using "value".
    // When the condition is detected then an event will be published with:
    //   topic: always "signal"
    //   subject: the name of the measure, in this case "power"
    //   verb: always "TRIGGERED".
    //   object: the name of the signal, in this case "high_load".
    signal high_load {
      when: "value > 80"
      with {
        severity: "critical"
      }
    }

    signal low_load {
      when: "power < 10"
    }
}

// You can also define more signals here, usually when they depends on more
// than one measure. Note that the reducer cannot infer a subject for the
// event then you need to specify one.
signal low_battery {
  when: "voltage < 23 and current < 10"
  with {
    subject: "Battery"
  }
}
